apiVersion: v1
kind: ConfigMap
metadata:
  name: sts-backend-config
  namespace: sts-production
  labels:
    app: sts-backend
    environment: production
data:
  cors-origins: '["https://sts-hub.maritime.com", "https://app.sts-clearance.com"]'
  log-level: "INFO"
  workers: "4"
  max-requests: "1000"
  timeout: "120"
  keep-alive: "5"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sts-frontend-config
  namespace: sts-production
  labels:
    app: sts-frontend
    environment: production
data:
  api-url: "https://api.sts-clearance.com"
  ws-url: "wss://api.sts-clearance.com"
  app-version: "2.0.0"
  environment: "production"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: sts-production
  labels:
    app: sts-frontend
    environment: production
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 50M;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self' wss: https:;" always;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Static assets with long cache
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                try_files $uri =404;
            }

            # API proxy with rate limiting
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://sts-backend-service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # WebSocket proxy
            location /ws {
                proxy_pass http://sts-backend-service;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # React app - serve index.html for all routes
            location / {
                try_files $uri $uri/ /index.html;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }

            # Security - deny access to sensitive files
            location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
            }

            location ~ \.(env|log|conf)$ {
                deny all;
                access_log off;
                log_not_found off;
            }
        }
    }