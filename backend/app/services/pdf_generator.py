"""
PDF Generator service for STS Clearance system
Handles PDF generation for snapshots and reports
"""

import io
import logging
from datetime import datetime
from typing import Any, Dict, List

logger = logging.getLogger(__name__)


class PDFGenerator:
    """
    PDF Generator for room snapshots and reports
    """

    def __init__(self):
        pass

    def generate_room_snapshot(
        self,
        room_data: Dict[str, Any],
        include_documents: bool = True,
        include_activity: bool = True,
        include_approvals: bool = True,
    ) -> bytes:
        """
        Generate a PDF snapshot of room status
        """
        try:
            # Mock PDF generation - in production, use a proper PDF library like reportlab
            content = self._generate_mock_pdf_content(
                room_data, include_documents, include_activity, include_approvals
            )

            return content.encode("utf-8")

        except Exception as e:
            logger.error(f"Error generating PDF snapshot: {e}")
            raise

    def _generate_mock_pdf_content(
        self,
        room_data: Dict[str, Any],
        include_documents: bool,
        include_activity: bool,
        include_approvals: bool,
    ) -> str:
        """
        Generate mock PDF content (in production, this would create actual PDF)
        """
        content = f"""
STS CLEARANCE ROOM SNAPSHOT
Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

ROOM INFORMATION
================
Title: {room_data.get('title', 'N/A')}
Location: {room_data.get('location', 'N/A')}
STS ETA: {room_data.get('sts_eta', 'N/A')}
Status: {room_data.get('status', 'Active')}

PARTIES
=======
"""

        parties = room_data.get("parties", [])
        for party in parties:
            content += f"- {party.get('name', 'N/A')} ({party.get('role', 'N/A')}) - {party.get('email', 'N/A')}\n"

        if include_documents:
            content += """
DOCUMENTS STATUS
================
"""
            documents = room_data.get("documents", [])
            for doc in documents:
                content += f"- {doc.get('name', 'N/A')}: {doc.get('status', 'N/A')}\n"

        if include_approvals:
            content += """
APPROVALS STATUS
================
"""
            approvals = room_data.get("approvals", [])
            for approval in approvals:
                content += f"- {approval.get('party_name', 'N/A')}: {approval.get('status', 'N/A')}\n"

        if include_activity:
            content += """
RECENT ACTIVITY
===============
"""
            activities = room_data.get("activities", [])
            for activity in activities[:10]:  # Last 10 activities
                content += f"- {activity.get('timestamp', 'N/A')}: {activity.get('description', 'N/A')}\n"

        content += """

---
Generated by STS Clearance System
"""

        return content


# Global PDF generator instance
pdf_generator = PDFGenerator()
