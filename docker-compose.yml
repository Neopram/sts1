version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: sts-postgres
    environment:
      POSTGRES_DB: sts_clearance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI backend
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: sts-backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/sts_clearance
      - SQL_ECHO=false
      - MEDIA_ROOT=/app/uploads
      - SECRET_KEY=sts-clearance-hub-secret-key-2024
      - COCKPIT_MISSING_EXPIRING_DOCS=true
      - DEBUG=true
      - RELOAD=true
      - CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000", "http://localhost:3001", "http://localhost:3002", "http://127.0.0.1:3001", "http://127.0.0.1:3002", "http://frontend:3001"]
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (development server)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: sts-frontend
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_APP_TITLE=STS Clearance Hub
      - VITE_DEV_MODE=true
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 3000

volumes:
  postgres_data:
  uploads_data:
